@model IEnumerable<Recipe>

@inject SignInManager<Account> SignInManager
@using Microsoft.AspNetCore.Identity;
@inject UserManager<Account> UserManager
@{
    ViewData["Title"] = "Details";
    var currentUser = await UserManager.GetUserAsync(User);
    bool isOwner = false;
    @if (SignInManager.IsSignedIn(User))
    {
        if (currentUser.Id.Equals(@ViewData["UserId"] as string))
        {
            isOwner = true;
        }
    }
}

<link rel="stylesheet" href="~/css/collection.css" />
<style>
    .info {
        background-color: rgb(220,255,255);
        display: inline-block;
        padding: 0 3px 0 3px;
        margin: 2px;
    }
</style>
@if ((isOwner) || (!(bool)ViewData["IsPrivate"]))
{
    <div class="mt-3 mb-4">
        @if (isOwner)
        {
            <button id="editButton" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#editModal">
                EDIT
                <i class="fa fa-pencil" aria-hidden="true"></i>
            </button>
            <button id="deleteButton" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                DELETE
                <i class="fa fa-trash" aria-hidden="true"></i>
            </button>
            }
        <h1 id="collectionName" class="text-center">@ViewData["Name"]</h1>
        <h5 id="collectionDescription" class="text-center text-secondary">@ViewData["Description"]</h5>
        <input hidden type="checkbox" checked="@ViewData["IsPrivate"]" id="collectionPrivate" />
    </div>
    <div class="row">
        @foreach (var recipe in Model)
        {
            <div class="col-xl-4 col-md-6 col-12 mb-4 d-flex justify-content-center">
                <div class="card rounded-2 recipe-card" style="position:relative">
                    <div class="card-head">
                        @if (isOwner)
                        {
                            <button id="remove-button-@recipe.Id" data-favourite-id="@ViewData["Id"]" data-recipe-id="@recipe.Id" onclick="removeFavourite(this);" class="btn btn-danger text-center p-0"
                                    style="z-index:1;border-radius:50%;position:absolute;right:-18px;top:-18px;width:36px;height:36px" value="-">
                                <i class="fa-solid fa-minus fa-2x"></i>
                            </button>
                        }
                        <img src="@recipe.ImgPath" class="img-fluid card-img-top" alt="Food" style="height: 100%; width: 100%;object-fit: cover;">
                    </div>
                    <div class="mt-2 card-body">
                        <a asp-controller="UserRecipes" asp-action="Details" asp-route-id="@recipe.Id" class="text-decoration-none h-100">
                            <div class="pb-4 pt-3">
                                <h4 class="card-title text-dark text-decoration-none" style="font-family: Bahnschrift; white-space:nowrap; overflow: hidden; text-overflow:ellipsis;">@recipe.Name</h4>
                                <div class="container mt-3 mb-3">
                                    <div class="row mb-2">
                                        <div class="col-md-6 col-12 text-dark">
                                            <div class="rounded-5 info">
                                                @if (recipe.PrepTime < 360)
                                                {
                                                    <i class="fa-solid fa-clock"></i> <span class="text-dark" style="font-size: 14px;">@recipe.PrepTime minutes</span>
                                                }
                                                else
                                                {
                                                    <i class="fa-solid fa-clock"></i> <span class="text-dark" style="font-size: 14px;">
                                                        @(
                                                            recipe.PrepTime / 60
                                                            ) hours
                                                    </span>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12 text-dark">
                                            <div class="rounded-5 info">
                                                <i class="fa-solid fa-utensils"></i> <span class="text-dark" style="font-size: 14px;">@recipe.FkRecipeCategory?.Name</span>
                                            </div>
                                        </div>
                                        @if (@recipe.ServingSize != null)
                                        {
                                            <div class="col-md-6 col-12 text-dark">
                                                <div class="rounded-5 info">
                                                    <i class="fa-solid fa-user"></i> <span class="text-dark" style="font-size: 14px;">For @recipe.ServingSize people</span>
                                                </div>
                                            </div>
                                        }
                                        <div class="col-md-6 col-12 text-dark">
                                            <div class="rounded-5 info">
                                                <i class="fa-solid fa-exclamation-triangle"></i>
                                                <span class="text-dark" style="font-size: 14px;">
                                                    @for (var i = 0; i < recipe.Difficult; i++)
                                                    {
                                                        <i class="fa fa-star" style="color: red;" aria-hidden="true"></i>
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                    <div id="overlay-@recipe.Id" style="visibility:hidden;width:100%;height: 100%; position:absolute;opacity:0.5;background-color:white">
                    </div>
                    @if (isOwner)
                    {
                        <button id="undo-button-@recipe.Id" data-favourite-id="@ViewData["Id"]" data-recipe-id="@recipe.Id" onclick="addFavourite(this);" class="btn btn-light text-center p-0" style="visibility:hidden;position:absolute;left:50%;top:50%;margin-top:-10px;margin-left:-18px;width:36px;height:20px">Undo</button>
                    }
                </div>
            </div>
        }
        @*End of foreach*@

    </div>
    @if (Model.Count() == 0)
    {
        if (isOwner)
        {
            <h2 class="text-center my-3">You haven't added anything to this collection yet. Start browsing!</h2>
            <h5 class="text-center my-1">You can save a recipe to this collection by clicking on the heart icon on the recipe page.</h5>
        }
        else
        {
            <h2 class="text-center my-3">This collection is empty.</h2>
        }
    }

    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="editModalLabel">Edit Collection</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div>Collection Name:</div>
                    <input type="text" id="editName" placeholder="Name your collection" required />
                    <div>Collection Description (Optional):</div>
                    <input type="text" id="editDescription" placeholder="Describe your collection" />
                    <div>Set Sharing Option:</div>
                    <div class="d-flex">
                        <div class="form-text">Public</div>
                        <div class="form-check form-switch form-check-inline" style="margin: 3px 0px 0 15px;"><input id="editPrivate" class="form-check-input form-check-inline" type="checkbox"></div>

                        <div class="form-text">Private</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="edit-save" type="button" class="btn btn-primary" data-bs-dismiss="modal" data-collection-id="@ViewData["Id"]">Save</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Delete Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="deleteModalLabel">Delete Collection</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div>Are you sure you want to delete this collection?</div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

                    @using (Html.BeginForm("Delete", "Favourites", new { id = ViewData["Id"] }, FormMethod.Post, false, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{
    <h1 class="text-danger text-center">THIS COLLECTION IS PRIVATE</h1>
}

<script src="~/lib/jquery-3.7.0.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js"></script>

<script>
    function addFavourite(element) {
        var recipeId = element.dataset.recipeId;
        var favouriteId = element.dataset.favouriteId;
        $.ajax({
            url: '/Favourites/AddToFavourite',
            type: 'POST',
            data: { recipeId: recipeId, favouriteId: favouriteId },
            success: function () {
                $('#undo-button-' + recipeId).css("visibility", "hidden");
                $('#remove-button-' + recipeId).css("visibility", "visible");
                $('#overlay-' + recipeId).css("visibility", "hidden");
            },
            error: function () {
                alert('Error removing favourite.');
            }
        });
    }
    function removeFavourite(element) {
        var recipeId = element.dataset.recipeId;
        var favouriteId = element.dataset.favouriteId;
        $.ajax({
            url: '/Favourites/RemoveFromFavourite',
            type: 'POST',
            data: { recipeId: recipeId, favouriteId: favouriteId },
            success: function () {
                $('#undo-button-' + recipeId).css("visibility", "visible");
                $('#remove-button-' + recipeId).css("visibility", "hidden");
                $('#overlay-' + recipeId).css("visibility", "visible");
            },
            error: function () {
                alert('Error removing favourite.');
            }
        });
    }
    $(document).ready(function () {
        $('#editButton').click(function () {
            document.getElementById("editName").value = document.getElementById("collectionName").innerHTML;

            document.getElementById("editDescription").value = document.getElementById("collectionDescription").innerHTML;
            document.getElementById("editPrivate").checked = document.getElementById("collectionPrivate").checked;
        });
        $('#edit-save').click(function () {
            var collectionId = $(this).data('collection-id');
            var newName = document.getElementById("editName").value;
            var newDescription = document.getElementById("editDescription").value;
            var newPrivate = document.getElementById("editPrivate").checked;

            $.ajax({
                url: '/Favourites/Edit',
                type: 'POST',
                data: { id: collectionId, name: newName, description: newDescription, isPrivate: newPrivate },
                success: function (data) {
                    $('#collectionName').html(data.name);
                    $('#collectionDescription').html(data.description);
                    $('#collectionPrivate').prop('checked', data.isPrivate);
                },
                error: function () {
                    alert('Error adding recipes to favorites.');
                }
            });
        });
    });
</script>